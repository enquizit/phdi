plugins {
  id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'gov.cdc.nbs.modernization'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
  // spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-web'
   
  // database
	runtimeOnly 'org.postgresql:postgresql'

  // lombok
  compileOnly 'org.projectlombok:lombok:1.18.32'
  annotationProcessor 'org.projectlombok:lombok:1.18.32'

  // swagger
  implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0"

  // jackson
  implementation "com.fasterxml.jackson.core:jackson-databind"
  implementation "com.fasterxml.jackson.core:jackson-core"
  implementation "com.fasterxml.jackson.core:jackson-annotations"
  
  
  implementation "org.apache.commons:commons-text:1.9"
  implementation "com.github.mpkorstanje:simmetrics-core:4.1.1"

  // test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }
    }
}


tasks.withType(JavaExec).configureEach {

    debugOptions {
        enabled = true
        server = true
        suspend = false
        port = java.util.Optional.ofNullable(findProperty('debug.port'))
                .map(Object::toString)
                .map(Integer::parseInt)
                .orElse(5005)
    }
}
